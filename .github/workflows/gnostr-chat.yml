name: gnostr-chat.yml

# Controls when the action will run.
on:
  schedule:
    - cron: '*/30 * * * *' # run 30th minute
  push:
    branches:
      - '**'

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  gnostr-chat:
    env:
      FORCE: "--force"
      GNOSTR: "gnostr"
      POW: "16"
      DAMUS: "wss://relay.damus.io"
      NOS: "wss://nos.lol"
    strategy:
      matrix:
        os: [ubuntu-latest]
        rustup: [stable, nightly]
    runs-on: ${{ matrix.os }}
    steps:
      - name: echo test
        run: |
          echo GNOSTR=${{ env.GNOSTR }}
          echo MEMPOOL=${{ env.MEMPOOL }}
          echo POW=${{ env.POW }}
          echo DAMUS=${{ env.DAMUS }}
          echo NOS=${{ env.NOS }}
          printenv
        env:
          MEMPOOL: "mempool"
          MEMPOOL_SPACE: "mempool-space"

      - uses: styfle/cancel-workflow-action@0.11.0
        if: ${{ !env.ACT }}
        with:
          access_token: ${{ github.token }}

      - name: Restore rustup
        id: cache-rustup-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.rustup
          key: ${{ runner.os }}-rustup-${{ matrix.rustup }}

      - name: Restore cargo
        id: cache-cargo-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ matrix.rustup }}

      - name: Restore target
        id: cache-target-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            target
          key: ${{ runner.os }}-target-${{ matrix.rustup }}

      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          set-safe-directory: 'true'
          fetch-depth: '0'
          fetch-tags: 'false'

      - run: rustup default ${{ matrix.rustup }}
      - run: cargo search gnostr --limit 100
      - run: cargo install cargo-binstall@1.9.0 || true
      - run: cargo-binstall --no-confirm gnostr
        if: matrix.rustup == '1.89'
      - run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        if: matrix.os == 'macos-latest'
      - run: brew tap gnostr-org/homebrew-gnostr-org || true
        if: matrix.os == 'macos-latest'
      - run: brew tap nostorg/nostr || true
        if: matrix.os == 'macos-latest'
      - run: brew tap randymcmillan/homebrew-randymcmillan || true
        if: matrix.os == 'macos-latest'
      - run: brew install gnostr-org/gnostr-org/gnostr && gnostr --help
        if: matrix.os == 'macos-latest'
      - run: |
          gnostr -d ${{ env.POW }} \
          -r ${{ env.DAMUS }} \
          --nsec "$(gnostr-sha256)" \
          note \
          -c "gnostr-chat gnostr://$(gnostr-weeble)/$(gnostr-blockheight)"
      - run: |
          gnostr ngit --nsec $(gnostr-sha256) fetch
      - run: |
          gnostr chat & sleep 360 && pkill -f gnostr
