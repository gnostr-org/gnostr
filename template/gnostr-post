#!/usr/bin/env bash

set -e
#uxo pipefail

##echo $1 $2
WEEBLE=$(gnostr-weeble || 0)
BLOCK=$(gnostr-blockheight || 0)
WOBBLE=$(gnostr-wobble || 0)
echo $WEEBLE
echo $BLOCK
echo $WOBBLE

## gnostr-post
## gnostr-post --sec
ARG=${1:-}
## gnostr-post --sec $(gnostr-sha256)
SEC=${2:-0000000000000000000000000000000000000000000000000000000000000001}
## gnostr-post --sec $(gnostr-sha256) --content "this is a message"
ARG2=${3:-}

version(){

  printf "v0.0.0";
exit;
}
help(){

  printf "gnostr-post -h --help\n";
  printf "            -v --version\n";
  printf "            \n";
  printf "            --sec <sha256>\n";
  printf "            --sec <sha256> --content \"<string>\"\n";
exit;
}
if [[ $ARG == "-h" ]];
then
help
fi
if [[ $ARG == "--help" ]];
then
help
fi
if [[ $ARG == "help" ]];
then
help
fi
if [[ $ARG == "-v" ]];
then
  version
fi
if [[ $ARG == "--version" ]];
then
  version
fi
if [[ $ARG == "--sec" ]];
then
 SEC=$2
fi
               ##ARG1 ##SEC            ##ARG2     ##CONTENT
## gnostr-post --sec  $(gnostr-sha256) --content "this is a message"
if [[ $ARG2 == "--content" ]];
then
 ARG_CONTENT=$4
fi

TMP=$(mktemp)

echo $ARG_CONTENT > $TMP

$EDITOR "$TMP"

if [ ! -f "$TMP" ]; then
	printf "could not create temporary file\n" >&2
	exit 1
fi

content="$(cat $TMP)"

re="^[[:space:]]*$"
if [[ "$content" =~ $re ]]; then
	printf "note empty. aborting.\n" >&2
	exit 2
fi

## sec=""
## if command -v gnostr-git >/dev/null; then
## 	key=$(gnostr-git config gnostr.secretkey) || \
##   key=0000000000000000000000000000000000000000000000000000000000000000 ##technically an invalid secretkey
## 	if [ $key != "" ]; then
## 		sec="--sec $key"
## 	fi
## elif command -v git >/dev/null; then
## 	key=$(git config nostr.secretkey) || \
##   key=0000000000000000000000000000000000000000000000000000000000000000 ##technically an invalid secretkey
## 	if [ $key != "" ]; then
## 		sec="--sec $key"
## 	fi
## fi

note=$(gnostr --sec $SEC "$@" -t gnostr -t $(gnostr-weeble) -t $(gnostr-blockheight) -t $(gnostr-wobble) --content "$content")

RELAYS=$(gnostr-get-relays -s) || $(curl  'https://api.nostr.watch/v1/online' 2>/dev/null |
    sed -e 's/[{}]/''/g' |
    sed -e 's/\[/''/g' |
    sed -e 's/\]/''/g' |
    sed -e 's/"//g' |
    awk -v k="text" '{n=split($0,a,","); for (i=1; i<=n; i++) print a[i]}') 2>/dev/null
#echo $RELAYS
#
##printf "relaying:\n" >&2
printf "$note\n"
<<<"$note" gnostr-post-event wss://relay.damus.io || true
#printf "done.\n" >&2
printf "$note\n"
<<<"$note" gnostr-post-event wss://nos.lol || true
#printf "done.\n" >&2

for r in $RELAYS;
do
printf "trying:\n$r:\n" >&2
printf "$note\n"
<<<"$note" gnostr-post-event $r || true
#printf "done.\n" >&2
done

rm -f "$TMP"
